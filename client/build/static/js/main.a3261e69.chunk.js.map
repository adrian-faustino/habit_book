{"version":3,"sources":["actions/index.js","helpers/protectedRouteOnMount.js","actions/userActions.js","components/TestComponent.js","components/Navbar/NavDashboard.js","components/Navbar/Navbar.js","hooks/useFormHook.js","hooks/useRegistrationFormData.js","constants/index.js","helpers/userValidationHelpers.js","helpers/LoginHelpers.js","components/RegistrationForm/RegistrationForm.js","components/ProtectedRoute.js","components/UserSearchBar/UserSearchBar.js","helpers/getDataHelpers.js","helpers/formatHelpers.js","util/config.js","hooks/useInput.js","helpers/postDataHelpers.js","helpers/habitFormHelpers.js","components/HabitCard/EditHabitForm/EditHabitForm.js","helpers/followDataHelpers.js","components/UserCard/UserCard.js","views/SignUpPage/SignUpPage.js","views/LoginPage/LoginPage.js","views/WelcomePage/WelcomePage.js","components/NewHabit/NewHabitForm/NewHabitForm.js","components/NewHabit/NewHabit.js","helpers/dateObjHelpers.js","helpers/CalendarHelpers.js","components/HabitCard/CalendarComponent/CalendarComponent.js","helpers/habitDataHelpers.js","components/HabitCard/CommentsContainer/CommentDeleteConfirmation/CommentDeleteConfimration.js","components/HabitCard/CommentsContainer/CommentEditForm/CommentEditForm.js","helpers/commentDataHelpers.js","components/HabitCard/CommentsContainer/CommentCard/CommentCard.js","components/HabitCard/CommentsContainer/CommentsContainer.js","components/HabitCard/CommentForm/CommentForm.js","components/HabitCard/DeleteConfirmation/DeleteConfirmation.js","components/HabitCard/HabitCard.js","components/CardsContainer/CardsContainer.js","views/HomePage/HomePage.js","views/SearchPage/SearchPage.js","views/UserPage/UserPage.js","views/FollowingPage/FollowingPage.js","views/FollowersPage/FollowersPage.js","App.js","serviceWorker.js","reducers/counterReducer.js","reducers/loggedReducer.js","reducers/errorReducer.js","reducers/authReducer.js","actions/types.js","reducers/userReducer.js","reducers/index.js","index.js"],"names":["increment","int","type","payload","getUserData","dispatch","a","localStorage","user","JSON","parse","userData","TestComponent","counter","useSelector","state","isLogged","useDispatch","onClick","e","preventDefault","username","NavDashboard","props","first_name","push","last_name","email","useHistory","className","Button","clear","window","location","reload","Navbar","Nav","NavItem","NavLink","tag","Link","to","useForm","submitCallback","useState","setState","persist","target","name","value","prev","resetState","key","useRegistrationFormData","password","_password","error","setError","constants","USERNAME_MAX_LENGTH","PASSWORD_MIN_LENGTH","isValidEmail","test","isValidUsername","length","isValidPassword","userValidationHelpers","isEmptyObj","obj","hasOwnProperty","isValidSubmission","values","inputWithinRange","string","min","max","loginReq","userLogin","callback","endpoint","process","REACT_APP_API","axios","post","then","res","data","accessToken","stringify","_user","setItem","catch","err","console","log","RegistrationForm","setLoading","successMsg","setRedirectURL","response","register","handleChange","handleSubmit","handleReset","loading","redirectURL","Form","onSubmit","Row","Col","FormGroup","Label","for","Input","onChange","valid","invalid","FormFeedback","FormText","disabled","block","color","Spinner","size","ProtectedRoute","children","rest","render","getItem","UserSearchBar","setQueryHits","setIsLoading","query","get","queryHits","placeholder","getUserAPIData","user_id","getUserHabitCountAPIData","getHabitsAPIData","getCompleted_atAPIData","habit_id","dates","map","date","completed_at","split","formatZeros","desiredLength","result","toString","formatToWords","dateStr","year","month","day","formatPlural","num","str","config","headers","authorization","useInput","initialValue","setValue","submitHabit_API","habit","updateHabit_API","put","trimText","title","trim","replace","validateForm","description","isValidTitle","EditHabitForm","setEditMode","setErr","setSuccess","_title","titleBind","_description","descriptionBind","close","autoComplete","validated","setTimeout","msg","autoFocus","getUserFollowers","users","getUserFollowing","UserCard","userObj","avatar_url","created_at","is_active","habitCount","setHabitCount","followerCount","setFollowerCount","isLoading","isFollowedByMe","setIsFollowedByMe","useEffect","url","href","user_id_from_url","_user_id","src","delete","message","unfollowUser","target_user_id","followUser","SignUpPage","LoginPage","success","setErrFlag","errFlag","formNoValidate","id","Alert","WelcomePage","NewHabitForm","setFormFeedback","formFeedback","NewHabit","getDateYYYYMMDD","dateObj","getFullYear","getMonth","getDate","createCompletedAt","request","newEntry","deleteCompletedAt","CalendarComponent","completedAt","Date","longestStreak","setLongestStreak","datesArr","currentCounter","longest","i","prevDay","parseInt","calcLongestStreak","unclickable","handleClickDay","includes","onClickDay","tileClassName","view","_date","today","handleDeleteCard","getLikes","likes","getComments","CommentDeleteConfimration","setIsDeleteMode","handleDeleteComment","CommentEditForm","comment","setIsEditMode","setTempComment","setTempEdited","content","comment_id","updateComment","CommentCard","setComments","comment_by","is_edited","commenter","setCommenter","isMyComment","setIsMyComment","isDeleteMode","isEditMode","tempComment","tempEdited","seconds","Math","floor","interval","timeSince","deleteComment","CommentsContainer","comments","_comments","uuidv4","CommentForm","createComment","handleExpandComments","ref","commentField","DeleteConfirmation","closeModal","bind","HabitCard","last_completed_at","last_broken_at","setCompletedAt","isMyHabit","setIsMyHabit","isMyLike","setIsMyLike","setLikes","likesCount","setLikesCount","habit_by","setHabitBy","deleteConfirm","setDeleteConfirm","editMode","commentsExpanded","setCommentsExpanded","useRef","liked","classNames","liked_by","keepOpen","registerLike","action","count","current","focus","CardsContainer","habits","setHabits","getUserHabits","renderHabits","HomePage","SearchPage","randomUsers","setRandomUsers","getRandomUsers","_queryHits","_randomUsers","UserPage","setUserObj","userHabits","setUserHabits","userFollowers","setUserFollowers","userFollowing","setUserFollowing","toggledData","setToggledData","handleSwitchTab","innerHTML","spread","spreadToggledData","displayEmptyFieldMsg","ButtonGroup","FollowingPage","setUsers","_users","FollowersPage","App","exact","path","component","Boolean","hostname","match","counterReducer","loggedReducer","initialState","status","token","isAuthenticated","authReducer","removeItem","userReducer","allReducers","combineReducers","pauload","auth","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3261e69.chunk.js","sourcesContent":["/** This is an example file for reference **/\n\nexport const login = () => {\n  return {\n    type: 'LOGIN'\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: 'LOGOUT'\n  };\n};\n\nexport const increment = int => {\n  return {\n    type: 'INCREMENT',\n    payload: int\n  };\n};\n\nexport const decrement = int => {\n  return {\n    type: 'DECREMENT',\n    payload: int\n  };\n};","import { login } from '../actions/';\nimport { setUser } from '../actions/userActions';\n\n// sync local storage user data with redux\nexport const getUserData = async (dispatch) => {\n  if (!localStorage.user) return;\n  const userData = await JSON.parse(localStorage.user);\n  dispatch(login());\n  dispatch(setUser(userData));\n};","export const setUser = userObj => {\n  return {\n    type: 'SET_USER',\n    payload: userObj\n  }\n};\n\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER'\n  }\n};","/** This is an example file for reference **/\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // useSelector for accessing state\nimport { login, logout, increment, decrement } from '../actions';\nimport { setUser } from '../actions/userActions';\nimport { Redirect } from 'react-router-dom';\nimport { getUserData } from '../helpers/protectedRouteOnMount';\n\nconst TestComponent = () => {\n\n  // return <Redirect to=\"/home\"/>\n  // set userobj from localStorage\n  // useEffect(() => {\n  //   getUserData(dispatch);\n  // }, []);\n\n  const counter = useSelector(state => state.counter);\n  const isLogged = useSelector(state => state.isLogged);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch(); // this is for dispatching actions to change state\n\n  const loginHandler = e => {\n    e.preventDefault();\n    isLogged ? dispatch(logout()) : dispatch(login());\n  };\n\n  return (\n    <div>\n      <h2>From TestComponent.js</h2>\n      <h3>Counter: {counter}</h3>\n      <button onClick={() => dispatch(increment(5))}>+</button>\n      <button onClick={() => dispatch(decrement(5))}>-</button>\n\n      <h4>\n        {isLogged ? 'You are logged in.' : 'Please sign in.'}\n      </h4>\n\n      <button onClick={loginHandler}>\n        {isLogged ? 'Log out' : 'Log in'}\n      </button>\n\n      {user.username}\n    </div>\n  )\n}\n\nexport default TestComponent\n","import React from \"react\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\n/** Redux actions */\nimport { clearUser } from \"../../actions/userActions\";\nimport { logout } from \"../../actions\";\n/** Reactstrap */\nimport { Button } from \"reactstrap\";\n/** React router **/\nimport { useHistory } from \"react-router\";\n/** Styles **/\nimport \"./NavDashboard.css\";\n\nconst NavDashboard = (props) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const { first_name, last_name, username, email } = user;\n\n  const { push } = useHistory();\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    localStorage.clear();\n    dispatch(logout());\n    dispatch(clearUser());\n\n    // refresh local storage\n    window.location.reload();\n\n    // trigger view change\n    push(\"/\");\n  };\n\n  return (\n    <div className=\"NavDashboard__container\">\n      <span className=\"NavDashboard__welcome-span\">\n        {`Welcome, ${first_name}`}\n      </span>\n\n      {/* for development only  */}\n      {/* <Button\n        className=\"NavDashboard__button\"\n        onClick={() => console.log(localStorage)}>\n        localstorage\n      </Button> */}\n\n      <Button className=\"NavDashboard__button\" onClick={handleLogout}>\n        logout\n      </Button>\n    </div>\n  );\n};\n\nexport default NavDashboard;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n/** Reactstrap **/\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\n/** React router **/\nimport { Link, Redirect } from \"react-router-dom\";\n/** Styles **/\nimport \"./Navbar.css\";\nimport NavDashboard from \"./NavDashboard\";\n\nconst Navbar = () => {\n  const isLogged = useSelector((state) => state.isLogged);\n\n  return (\n    <Nav className=\"Navbar__container\">\n      {isLogged && (\n        <>\n          <NavItem>\n            <NavLink className=\"Navbar__li\" tag={Link} to=\"/home\">\n              Home\n            </NavLink>\n          </NavItem>\n\n          {/* for development only - test buttons */}\n          {/* <NavItem>\n          <NavLink\n            className=\"Navbar__li\"\n            tag={Link}\n            to=\"/test\">\n              Test\n          </NavLink>\n        </NavItem>   */}\n\n          <NavItem>\n            <NavLink className=\"Navbar__li\" tag={Link} to=\"/search-users\">\n              Find Users\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink className=\"Navbar__li\" tag={Link} to=\"/my-followers\">\n              My Followers\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink className=\"Navbar__li\" tag={Link} to=\"/following\">\n              Following\n            </NavLink>\n          </NavItem>\n        </>\n      )}\n\n      {!isLogged && (\n        <>\n          <NavItem>\n            <NavLink className=\"Navbar__li\" tag={Link} to=\"/login\">\n              Login\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink className=\"Navbar__li\" tag={Link} to=\"/signup\">\n              Register\n            </NavLink>\n          </NavItem>\n        </>\n      )}\n\n      {isLogged && (\n        <NavItem>\n          <NavDashboard />\n        </NavItem>\n      )}\n    </Nav>\n  );\n};\n\nexport default Navbar;\n\n/* React-router with Reactstrap notes:\n * - Use tag attribute to prevent page reload when changing page */\n","import { useState } from 'react';\n\nconst useForm = submitCallback => {\n  const [state, setState] = useState({});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    submitCallback();\n  };\n\n  const handleReset = () => {\n    const resetState = {};\n    for (let key in state) resetState[key] = '';\n    setState(resetState);\n  }\n\n  const handleChange = e => {\n    e.persist();\n    const { name, value } = e.target;\n    setState(prev => ({ ...prev, [name] : value }));\n  };\n\n  return [state, handleChange, handleSubmit, handleReset];\n};\n\nexport default useForm;\n\n/* Custom hook notes:\n * This way of writing custom hooks can handle\n * any input and also the submission. Compared to\n * the other useInput custom hook I wrote, this is\n * cleaner. */","import { useState } from 'react';\n\nconst useRegistrationFormData = () => {\n  const [error, setError] = useState({\n    first_name: '',\n    last_name: '',\n    username: '',\n    email: '',\n    password: '',\n    _password: ''\n  });\n\n  return { error, setError };\n};\n\nexport default useRegistrationFormData;\n\n/* Design notes:\n * By having the state of the component here, I can\n * choose which states can be updated, and all the\n * logic for updating states can all be put in this\n * one file. */","/** The information in this file should be the same as the server folder constants file **/\n\nconst USERNAME_MAX_LENGTH = 12;\nconst PASSWORD_MIN_LENGTH = 6;\n\nconst constants = {\n  USERNAME_MAX_LENGTH,\n  PASSWORD_MIN_LENGTH\n};\n\nexport default constants;","/** The validation methods in this file should be similar to server **/\nimport constants from '../constants';\nconst { USERNAME_MAX_LENGTH, PASSWORD_MIN_LENGTH } = constants;\n\n/** Input: string. Output: boolean **/\nconst isValidEmail = email => {\n  if (!email) return false;\n  const REGEX = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  return REGEX.test(email);\n};\n\n/** Input: string. Output: boolean **/\nconst isValidUsername = username => {\n  const REGEX = /^[a-zA-Z0-9]+$/; // simple alpha numeric regex for now\n  if (!username) return false;\n  if (username.length > USERNAME_MAX_LENGTH) return false;\n  return REGEX.test(username);\n};\n\n/** Input: string. Output: boolean **/\nconst isValidPassword = password => {\n  const REGEX = /^[a-zA-Z0-9]+$/; // simple alpha numeric regex for now\n  if (!password) return false;\n  if (password.length < PASSWORD_MIN_LENGTH) return false;\n  return REGEX.test(password);\n};\n\n/** Input: object. Output: boolean **/\nconst isEmptyObj = obj => {\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n  return true;\n};\n\n/** Output: boolean **/\n/* Notes: for now I am validating if it is ok to submit. Errors\n * will be returned if username or email exists already. */\nconst isValidSubmission = values => {\n  /** Validate null fields **/\n  const error = {};\n  !values.username && (error.username = `Username is required.`);\n  !values.first_name && (error.first_name = `First name is required.`);\n  !values.last_name && (error.last_name = `Last name is required.`);\n  !values.email && (error.email = `Email is required.`);\n  !values.password && (error.password = `Password is required.`);\n  /** Validate username **/\n  values.username &&\n    !isValidUsername(values.username) &&\n    (error.username = `Invalid username.`);\n  /** Validate email **/\n  values.email &&\n    !isValidEmail(values.email) &&\n    (error.email = `Invalid email.`);\n  /** Validate password **/\n  values.password &&\n    !isValidPassword(values.password) &&\n    (error.password = `Invalid password.`);\n  /** Validate if password matches **/\n  values._password &&\n    (values.password !== values._password) &&\n    (error._password = `Password does not match.`);\n\n  return error;\n};\n\n/** Output: boolean **/\nconst inputWithinRange = (string, min, max) => {\n  if (!string) return;\n  return string.length >= min && string.length <= max;\n};\n\n\n\nconst userValidationHelpers = {\n  isValidEmail,\n  isValidUsername,\n  isValidPassword,\n  isEmptyObj,\n  isValidSubmission,\n  inputWithinRange\n};\n\nexport default userValidationHelpers;","import axios from 'axios';\n\nexport const loginReq = (userLogin, callback) => {\n  const endpoint = \n  process.env.REACT_APP_API + 'login';\n\n  axios\n    .post(endpoint, userLogin)\n    .then(async res => {\n      const { accessToken, user } = res.data;\n      const _user = await JSON.stringify(user);\n\n      // save to local storage ** this method takes a key and val\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('user', _user);\n\n      // refresh local storage\n      window.location.reload();\n\n      // trigger redirect\n      callback();\n    })\n    .catch(err => {\n      console.log(err)\n      callback(null, err);\n    });\n};","import React, { useState } from 'react';\nimport axios from 'axios';\n/** Redux **/\nimport { useDispatch } from 'react-redux';\n/** Reactstrap **/\nimport { Form, FormGroup, Label, Input, FormFeedback, FormText, Button, Row, Col, Spinner } from 'reactstrap';\n/** Styles **/\nimport './RegistrationForm.css';\n/** Custom hooks **/\nimport useForm from '../../hooks/useFormHook';\n/** React Router **/\nimport { Redirect } from 'react-router-dom';\n/** Helpers **/\nimport { login } from '../../actions';\nimport useRegistrationFormData from '../../hooks/useRegistrationFormData';\nimport userValidationHelpers from '../../helpers/userValidationHelpers';\nimport constants from '../../constants';\nimport { loginReq } from '../../helpers/LoginHelpers';\n/** Helpers **/\nimport { getUserData } from '../../helpers/protectedRouteOnMount';\n\nconst {\n  USERNAME_MAX_LENGTH, \n  PASSWORD_MIN_LENGTH } = constants;\nconst {\n  isValidEmail, \n  isValidUsername,\n  isValidPassword,\n  isEmptyObj,\n  isValidSubmission,\n  inputWithinRange } = userValidationHelpers;\n\nconst RegistrationForm = () => {\n  /** State **/\n    // form errors\n  const { error, setError } = useRegistrationFormData();\n    // form values\n  const [ values,\n          handleChange,\n          handleSubmit,\n          handleReset] = useForm(validate);\n    // for loading spinner and redirect\n  const [loading, setLoading] = useState(false);\n  const [redirectURL, setRedirectURL] = useState(null);\n\n  /** Redux **/\n  const dispatch = useDispatch();\n \n  function validate() { // for hoisting\n    console.log('Validating...', values);\n    const error = isValidSubmission(values);\n    /** If there are any errors at all, do not register **/\n    if (!isEmptyObj(error)) return setError(error);\n    register();\n  };\n  \n  function register() {\n    console.log('Registering...', values);\n    const endpoint = \n      process.env.REACT_APP_API + 'users/newUser';\n    setLoading(true);\n\n    axios\n      .post(endpoint, values)\n      .then(res => {\n        const successMsg = res.data;\n        setLoading(false);\n        console.log('Register successful:', successMsg);\n\n        // login\n        const user = {\n          email: values.email,\n          password: values.password\n        }\n        loginReq(user, () => {\n          dispatch(login());\n\n          // sync local storage user info with redux\n          getUserData(dispatch);\n          setRedirectURL('/home')\n        });\n      })\n      .catch(err => {\n        setLoading(false);\n        /** This is an object containing all errors **/\n        const error = err.response.data;\n        console.log('Failed to register:', error);\n        setError(error);\n      });\n  };\n\n  /** Clear form values and clear errors **/\n  const handleResetForm = e => {\n    e.preventDefault();\n    handleReset();\n    setError({});\n  };\n\n  if (redirectURL) return <Redirect to={redirectURL} />\n  return (\n    <div className=\"RegistrationForm__form-container\">\n      {/* handleSubmit is the function passed into useForm hook */}\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col>\n            <FormGroup>\n              <Label for=\"first_name\">First Name:</Label>\n                <Input\n                  name=\"first_name\"\n                  type=\"text\"\n                  value={values.first_name || ''}\n                  onChange={handleChange}\n                  valid={values.first_name && true}\n                  invalid={error.first_name} />\n                <FormFeedback invalid>\n                  {error.first_name}\n                </FormFeedback >\n            </FormGroup>\n          </Col>\n\n          <Col>\n            <FormGroup>\n              <Label for=\"last_name\">Last Name:</Label>\n                <Input\n                  name=\"last_name\"\n                  type=\"text\"\n                  value={values.last_name || ''}\n                  onChange={handleChange}\n                  valid={values.last_name && true}\n                  invalid={error.last_name} />\n                <FormFeedback invalid>\n                  {error.last_name}\n                </FormFeedback >\n            </FormGroup>\n          </Col>\n        </Row>\n\n        <FormGroup>\n          <Label for=\"username\">Username:</Label>\n            <Input\n              name=\"username\"\n              type=\"text\"\n              value={values.username || ''}\n              onChange={handleChange}\n              valid={\n                inputWithinRange(values.username, 1, USERNAME_MAX_LENGTH)}\n              invalid={\n                (values.username && !isValidUsername(values.username))\n                || error.username} />\n          <FormFeedback invalid>{error.username}</FormFeedback>\n          <FormText>\n            {values.username &&\n            isValidUsername(values.username) ? \n              `Remaining characters: ${USERNAME_MAX_LENGTH - values.username.length}` :\n              `Usernames must be within ${USERNAME_MAX_LENGTH} alphanumeric characters`}\n          </FormText>\n        </FormGroup>\n\n        <FormGroup>\n          <Label for=\"email\">E-mail:</Label>\n            <Input\n              name=\"email\"\n              type=\"email\"\n              value={values.email || ''}\n              onChange={handleChange}\n              valid={\n                isValidEmail(values.email)}\n              invalid={\n                (values.email && !isValidEmail(values.email))\n                || error.email} />\n          <FormFeedback invalid>{error.email}</FormFeedback>\n        </FormGroup>\n\n        <Row>\n          <Col>\n            <FormGroup>\n              <Label for=\"password\">Password:</Label>\n                <Input\n                  name=\"password\"\n                  type=\"password\"\n                  value={values.password || ''}\n                  onChange={handleChange}\n                  valid={\n                    isValidPassword(values.password)}\n                  invalid={\n                    (values.password &&\n                    !isValidPassword(values.password))\n                    || error.password} />\n              <FormFeedback invalid>\n                {error.password}\n              </FormFeedback>\n              <FormText>\n                {`Passwords must be at least ${PASSWORD_MIN_LENGTH} characters long`}\n              </FormText>\n            </FormGroup>\n          </Col>\n\n          <Col>\n            <FormGroup>\n              <Label for=\"_password\">Confirm:</Label>\n                <Input \n                  name=\"_password\"\n                  type=\"password\"\n                  value={values._password || ''}\n                  onChange={handleChange}\n                  valid={\n                    isValidPassword(values.password) &&\n                    values.password === values._password} \n                  invalid={\n                    (values.password !== values._password &&\n                    isValidPassword(values.password))\n                    || error._password} />\n              <FormFeedback invalid>\n                {error._password}\n              </FormFeedback>\n              <FormText>Please re-enter your password</FormText>\n            </FormGroup>\n          </Col>\n        </Row>\n\n        <Button\n          disabled={loading}\n          block\n          type=\"submit\"\n          color={\n            isEmptyObj(isValidSubmission(values)) ? \"success\" : \"secondary\"}>\n              {loading ? <Spinner size=\"sm\"/> : 'Register'}\n        </Button>\n      </Form>\n      \n      <Button\n        className=\"RegistrationForm__form-resetBtn\"\n        disabled={loading}\n        block\n        color=\"warning\"\n        onClick={handleResetForm}>\n          Reset Form\n      </Button>\n    </div>\n  )\n};\n\nexport default RegistrationForm;\n\n\n\n/* Reactstrap form notes:\n * Useful component attributes:\n * - <Input /> => valid, invalid\n * - <FormFeedback></> => valid (green text), invalid (red text)\n * - <Input /> valid/invalid is a switch for FormFeedback\n * - Use case: 2 statements for valid/invalid situations\n * - <FormText></> simply describes the input field  */\n\n/* Design notes:\n * I chose to write the functions using function declerations\n * for hoisting because originally I used arrows which forced\n * me to separate all the state declerations all over the place. Also for the sake of readabilty (the order the\n * functions will be read by a new dev, I wrote validate\n * and register to be hoisted\n * */","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({children, ...rest}) => {\n\n  const isAuth = () => {\n    const accessToken = localStorage.getItem('accessToken');\n    return accessToken ? true : false;\n    // make auth stronger? can client manaully add a key\n    // 'accessToken' to their localStorage?\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={() => \n        isAuth() ? children : (\n          <Redirect to=\"/welcome\" />\n        )\n      } />\n  );\n};\n\nexport default ProtectedRoute;\n","import React from 'react'\nimport axios from 'axios';\n/** Reactstrap **/\nimport { Button } from 'reactstrap';\n/** Styles **/\nimport './UserSearchBar.css';\n/** Custom hooks **/\nimport useForm from '../../hooks/useFormHook';\n\n\nconst UserSearchBar = props => {\n  const { setQueryHits, setIsLoading } = props;\n\n  /** State **/\n  const [ values,\n          handleChange,\n          handleSubmit,\n          handleReset ] = useForm(searchUser);\n\n  function searchUser() {\n    // check if empty\n    if (!values.query) return;\n    \n    console.log('submitting', values.query)\n    // ajax request\n    const name = values.query;\n    const endpoint = process.env.REACT_APP_API + \n      `search?name=${name}`\n\n    setIsLoading(true);\n    axios\n      .get(endpoint)\n      .then(res => {\n        setIsLoading(false);\n        setQueryHits(res.data.queryHits);\n      })\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <form\n      className=\"UserSearchBar__form\"\n      onSubmit={handleSubmit}>\n        <div className=\"UserSearchBar__input-group\">\n          <input\n            name=\"query\"\n            type=\"text\"\n            value={values.query || ''}\n            onChange={handleChange}\n            className=\"UserSearchBar__input-field\"\n            placeholder=\"find other users...\"/>\n          <Button\n            className=\"UserSearchBar__button\"\n            type=\"submit\">\n              Search\n          </Button>\n      </div>\n    </form>\n  )\n}\n\nexport default UserSearchBar\n","/** All the functions in this file are for getting specific information from the API **/\nimport axios from 'axios';\n\n// Get user data given user_id\nexport const getUserAPIData = async (user_id, callback) => {\n  const endpoint = process.env.REACT_APP_API +\n  `users/${user_id}`;\n\n  axios\n    .get(endpoint)\n    .then(res => {\n      callback(res.data[0]);\n    })\n    .catch(err => console.log(err));\n};\n\n// Get user habit count\nexport const getUserHabitCountAPIData = async (user_id, callback) => {\n  const endpoint =\n  process.env.REACT_APP_API +\n  `habits/${user_id}`;\n  \n  axios\n    .get(endpoint)\n    .then(res => {\n      callback(res.data.length);\n    })\n    .catch(err => console.log(err));\n\n};\n\n// get a list of a user's habits\nexport const getHabitsAPIData = async (user_id, callback) => {\n  const endpoint = process.env.REACT_APP_API +\n    `habits/${user_id}`;\n  \n  axios\n    .get(endpoint)\n    .then(res => {\n      callback(res.data);\n    })\n    .catch(err => {\n      console.log(err)\n      callback(null, err);\n    });\n};\n\n// Get a [] list of completed days for a habit\nexport const getCompleted_atAPIData = async (user_id, habit_id, callback) => {\n  const endpoint =\n  process.env.REACT_APP_API +\n  `habits/${user_id}/${habit_id}`;\n  \n  axios\n    .get(endpoint)\n    .then(res => {\n      const dates = res.data.map(date => {\n        return date.completed_at.split('T')[0];\n      });\n      callback(dates);\n    })\n    .catch(err => console.log(err));\n};\n","/** Adds leading zeroes based on 'length' integer. Output: string **/\nexport const formatZeros = (string, length) => {\n  const desiredLength = length;\n  let result = string.toString();\n  while (result.length < desiredLength) {\n    result = '0' + result;\n  }\n\n  return result;\n};\n\n/** Input: string. Output: 'Month Day, Year' */\nexport const formatToWords = dateStr => {\n  if (!dateStr) return;\n  \n  const date = dateStr.split('T')[0].split('-');\n  const [year, month, day] = date;\n\n  const MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  return `${MONTHS[month - 1]} ${day}, ${year}`;\n  /* STRETCH: add 1st 2nd 3rd suffix on date */\n};\n\n/** Input: int, str. Output: str*/\nexport const formatPlural = (num, str) => {\n  if (num > 1) {\n    return str + 's';\n  }\n  return str;\n}","// this will be used in all requests to routes protected by auth\nexport const config = {\n  headers: {\n    authorization : `Bearer ${localStorage.accessToken}`\n  }\n};\n\n// this will be used in all delete requests to routes protected by auth\nexport const headers = {\n  authorization: `Bearer ${localStorage.accessToken}`\n};","import { useState } from 'react';\n\nconst useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  const reset = () => setValue(initialValue);\n  const onChange = e => setValue(e.target.value);\n\n  const bind = {\n    value,\n    onChange\n  };\n\n  return [value, bind, reset];\n};\n\nexport default useInput;\n\n/* Custom hook notes:\n * Reference: https://youtu.be/6am-yn3ZLEw\n * - We will use spread operator on bind\n * - This covers value and onChange attributes on an input element */","/** All the functions in this file are for posting specific information to the API **/\nimport axios from 'axios';\nimport { config } from '../util/config';\n\n// post new habit\nexport const submitHabit_API = async (habit, callback) => {\n  const endpoint = \n  process.env.REACT_APP_API + 'habits/newHabit';\n\n  const payload = {\n    habit\n  };\n\n  try {\n    const response = await axios.post(endpoint, payload, config);\n    callback(response);\n  } catch (err) {\n    console.log('WF',err);\n  };\n};\n\nexport const updateHabit_API = async (habit_id, habit, callback) => {\n  console.log('Updating habit:', habit_id);\n  const endpoint = process.env.REACT_APP_API + `habits`;\n\n  const payload = {\n    habit_id, habit\n  };\n\n  try {\n    const res = await axios.put(endpoint, payload, config);\n    callback(res);\n  } catch (err) {\n    console.log(err);\n  }\n};","/** Output: valid title **/\n// no repeated whitespace\nconst isValidTitle = title => {\n  const REGEX = /^[a-z\\d\\-_\\s]+$/i; // simple alpha numeric regex with whitespace for now\n  return REGEX.test(title);\n};\n\n/** Input: string **/\n// remove excess whitespace and tabs\nconst trimText = title => {\n  if (!title) return;\n  const _title = title.trim().replace(/\\s\\s+/g, ' ');\n  return _title;\n};\n\n/** Input: object. Output: object **/\nexport const validateForm = values => {\n  const { title, description } = values;\n\n  if (!title) return { err: 'Please enter a title.' };\n  if (!isValidTitle(title)) return { err: 'Invalid characters used.' };\n\n  const habit = {\n    title: trimText(title),\n    description: trimText(description)\n  };\n\n  return { err: null, habit };\n};","import React from 'react';\n/** Redux **/\nimport { useDispatch } from 'react-redux';\n/** Redux actions **/\nimport { increment } from '../../../actions';\n/** Custom Hooks **/\nimport useInput from '../../../hooks/useInput';\n/** Reacstrap **/\nimport { Button } from 'reactstrap';\n/** Styles **/\nimport './EditHabitForm.css';\n/** Helpers **/\nimport { updateHabit_API } from '../../../helpers/postDataHelpers';\nimport { validateForm } from '../../../helpers/habitFormHelpers';\n\nconst EditHabitForm = props => {\n  const { description, title, setEditMode, habit_id, setErr, setSuccess } = props;\n\n  /** State **/\n  const [_title, titleBind, resetTitle] = useInput(title);\n  const [_description, descriptionBind, resetDescription] = useInput(description);\n\n  /** Redux **/\n  const dispatch = useDispatch();\n\n  const handleEditSubmit = e => {\n    e.preventDefault();\n    // ensure no empty title, and trim text for whitespace\n    const values = {\n      title: _title,\n      description: _description\n    };\n    const validated = validateForm(values);\n    if (validated.err) {\n      setErr(validated.err);\n\n      // fade out err after 2 seconds\n      setTimeout(() => {\n        setErr('');\n      }, 2000);\n\n      return;\n    };\n    \n    // if validation passes submit for update\n    const habit = {\n      title: _title,\n      description: _description\n    };\n    updateHabit_API(habit_id, habit, res => {\n      // trigger view update\n      dispatch(increment(1));\n\n      // trigger and fade out success feedback\n      setSuccess(res.data.msg);\n      setTimeout(() => {\n        setSuccess('');\n      }, 2000);\n      \n      // close form\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <div className=\"EditHabitForm\">\n      <Button\n        className=\"EditHabitForm__close-btn\"\n        onClick={() => setEditMode(false)}\n        close />\n\n      <form\n        autoComplete=\"off\"\n        type=\"submit\"\n        onSubmit={handleEditSubmit}>\n        <input \n          autoFocus\n          name=\"title\"\n          onChange={titleBind.onChange}\n          value={_title}\n          className=\"EditHabitForm__title\"/>\n\n        <textarea\n          name=\"description\"\n          onChange={descriptionBind.onChange}\n          value={_description || ''}\n          className=\"EditHabitForm__description\" \n          placeholder=\"edit mode...\">\n        </textarea>\n        <button \n          type=\"submit\"\n          className=\"EditHabitForm__save-btn\">\n            save\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditHabitForm;\n","/** All the functions in this file are for follows CRUD requests **/\nimport axios from 'axios';\nimport { config, headers } from '../util/config';\nimport EditHabitForm from '../components/HabitCard/EditHabitForm/EditHabitForm';\n\n// create a new follow relation between users\n/* param notes: follower_id refers to the   * user clicking follow button\n * target_user_id is the profile being followed */\nexport const followUser = (target_user_id, callback) => {\n  const endpoint = process.env.REACT_APP_API + `follows`;\n\n  const payload = {\n    target_user_id\n  };\n\n  axios\n    .post(endpoint, payload, config)\n    .then(data => {\n      callback(data);\n    })\n    .catch(err => console.log(err));\n};\n\n\n// read\n// get a single user's followers\nexport const getUserFollowers = (user_id, callback) => {\n  const endpoint = process.env.REACT_APP_API + `follows/${user_id}`;\n\n  axios\n    .get(endpoint)\n    .then(users => {\n      callback(users.data);\n    })\n    .catch(err => {\n      console.log(err);\n      callback(null, err);\n    });\n};\n\n// get all the accounts a user follows\nexport const getMyFollows = (callback) => {\n  const endpoint = process.env.REACT_APP_API + `follows/myFollows`;\n\n  axios\n    .get(endpoint, config)\n    .then(users => {\n      callback(users.data);\n    })\n    .catch(err => {\n      console.log(err);\n      callback(null, err);\n    });\n};\n\n// get all accounts a user follower\nexport const getUserFollowing = (user_id, callback) => {\n  const endpoint = process.env.REACT_APP_API + \n    `follows/following/${user_id}`;\n  axios\n    .get(endpoint)\n    .then(res => {\n      callback(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n      callback(null, err);\n    })\n}\n\n// update\n\n\n// delete\n// unfollow a user\nexport const unfollowUser = (user_id, callback) => {\n  const endpoint = process.env.REACT_APP_API + `follows/${user_id}`;\n\n  axios\n    .delete(endpoint, {headers})\n    .then(data => {\n      callback(data);\n    })\n    .catch(err => {\n      console.log(err.message);\n      callback(null, err);\n    })\n};","import React, { useEffect, useState } from \"react\";\n/** Helpers **/\nimport { getUserHabitCountAPIData } from \"../../helpers/getDataHelpers\";\nimport { formatToWords } from \"../../helpers/formatHelpers\";\nimport {\n  getUserFollowers,\n  getUserFollowing,\n} from \"../../helpers/followDataHelpers\";\n/** Styles **/\nimport \"./UserCard.css\";\n/** React router **/\nimport { Link } from \"react-router-dom\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\n/** Redux actions */\nimport { increment } from \"../../actions\";\n/** Reactstrap **/\nimport { Button } from \"reactstrap\";\nimport { followUser, unfollowUser } from \"../../helpers/followDataHelpers\";\n\nconst UserCard = ({ userObj }) => {\n  const {\n    user_id,\n    avatar_url,\n    created_at,\n    email,\n    first_name,\n    last_name,\n    is_active,\n    username,\n  } = userObj;\n\n  /** State **/\n  const [habitCount, setHabitCount] = useState(\"\");\n  const [followerCount, setFollowerCount] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFollowedByMe, setIsFollowedByMe] = useState(false);\n\n  /** Redux **/\n  const counter = useSelector((state) => state.counter);\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  // check if the current user is a follower of the current card\n  useEffect(() => {\n    getUserFollowing(user.user_id, (users) => {\n      for (let obj of users) {\n        if (obj.user_id === user_id) {\n          return setIsFollowedByMe(true);\n        }\n      }\n      setIsFollowedByMe(false);\n    });\n  }, [counter]);\n\n  useEffect(() => {\n    // get user # of habits\n    const url = window.location.href.split(\"/\");\n    const user_id_from_url = url[url.length - 1];\n    const _user_id = user_id || user_id_from_url;\n\n    getUserHabitCountAPIData(_user_id, (data) => {\n      setHabitCount(data);\n    });\n\n    // get user # of followers\n    getUserFollowers(_user_id, (users) => {\n      setFollowerCount(users.length);\n    });\n  }, [counter]);\n\n  const handleFollowUser = (e) => {\n    e.preventDefault();\n    if (isLoading) return;\n    setIsLoading(true);\n\n    // ==> UNFOLLOW user\n    if (isFollowedByMe) {\n      unfollowUser(user_id, (res, err) => {\n        setIsLoading(false);\n        if (err) return;\n        // trigger view change\n        dispatch(increment(1));\n        return;\n      });\n    } else {\n      // ==> FOLLOW user\n      followUser(user_id, (res, err) => {\n        setIsLoading(false);\n        if (err) return;\n        // trigger view change\n        dispatch(increment(1));\n      });\n    }\n  };\n\n  const triggerViewChange = () => {\n    dispatch(increment(1));\n  };\n\n  return (\n    <div className=\"UserCard__container\">\n      <Link to={`/users/${user_id}`}>\n        <div className=\"UserCard__left-container\">\n          <img className=\"UserCard__avatar\" src={avatar_url} />\n\n          <span className=\"UserCard__username\">@{username}</span>\n        </div>\n      </Link>\n\n      <div className=\"UserCard__right-container\">\n        <span onClick={triggerViewChange} className=\"UserCard__full-name\">\n          <Link to={`/users/${user_id}`}>\n            {first_name} {last_name}\n          </Link>\n        </span>\n\n        <span className=\"UserCard__email\">Email: {email}</span>\n\n        <span className=\"UserCard__habit-count\">Habits: {habitCount}</span>\n\n        <span className=\"UserCard__follower-count\">\n          Followers: {followerCount}\n        </span>\n\n        <span className=\"UserCard__created-at\">\n          Member since {formatToWords(created_at)}\n        </span>\n\n        {user.user_id !== user_id && (\n          <Button\n            color={isFollowedByMe ? \"info\" : \"secondary\"}\n            disabled={isLoading}\n            onClick={handleFollowUser}\n            className=\"UserCard__follow-button\"\n          >\n            {isFollowedByMe ? \"Unfollow\" : \"Follow\"}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserCard;\n","import React from 'react';\n/** Redux **/\nimport { useSelector } from 'react-redux';\n/** Subcomponents **/\nimport { RegistrationForm } from '../../components';\n/** Styles **/\nimport './SignUpPage.css';\n\nconst SignUpPage = () => {\n  /** Redux **/\n  const isLogged = useSelector(state => state.isLogged);\n\n  if (isLogged) {\n    return (\n      <div className=\"SignUpPage\">\n        You are already logged in!\n      </div>\n      // stretch: logout button\n    );\n  }\n  return (\n    <section\n      className=\"SignUpPage\">\n      <RegistrationForm />\n    </section>\n  );\n};\n\nexport default SignUpPage;\n\n/* Reactstrap form notes:\n * Useful component attributes:\n * - <Input /> => valid, invalid\n * - <FormFeedback></> => valid (green text), invalid (red text)\n * - <Input /> valid/invalid is a switch for FormFeedback\n * - Use case: 2 statements for valid/invalid situations\n * - <FormText></> simply describes the input field  */\n\n /* Design notes:\n  * Based on MVC design concept, this will be strictly a VIEW\n  * component. All the logic will be done in the subcomponents */","import React, { useState } from 'react';\n/** Redux **/\nimport { useDispatch, useSelector } from 'react-redux';\n/** Redux actions */\nimport { login } from '../../actions';\n/** Reactstrap **/\nimport { Alert, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n/** Styles **/\nimport './LoginPage.css';\n/** Helpers **/\nimport useForm from '../../hooks/useFormHook';\nimport { Redirect } from 'react-router-dom';\nimport { loginReq } from '../../helpers/LoginHelpers';\nimport { getUserData } from '../../helpers/protectedRouteOnMount';\n\nconst LoginPage = () => {\n  /** State **/\n  const [redirectURL, setRedirectURL] = useState(null);\n  const [\n    userLogin, \n    handleChange, \n    handleSubmit, \n    handleReset] = useForm(requestLogin);\n  const [errFlag, setErrFlag] = useState(false);\n  \n  /** Redux **/\n  const dispatch = useDispatch();\n  const isLogged = useSelector(state => state.isLogged);\n\n  function requestLogin() {\n    loginReq(userLogin, (success, err) => {\n      if (err) {\n        setErrFlag(true);\n        setTimeout(() => {\n          setErrFlag(false);\n        }, 3000);\n        return;\n      }\n      \n      \n      // sync local storage user info with redux\n      getUserData(dispatch);\n      dispatch(login());\n      setRedirectURL('/home')\n    });\n  };\n  \n  // if logged in do not show login form\n  if (isLogged) {\n    return (\n      <div className=\"LoginPage\">You are already logged in!</div>\n      // stretch: logout button\n    )\n  };\n  return (\n    redirectURL ? (\n      <Redirect to={redirectURL} />\n    ) : (\n    <section\n      className=\"LoginPage\">\n        <div className=\"LoginPage__form-container\">\n        <h1>Login</h1>\n        <Form \n          formNoValidate\n          onSubmit={handleSubmit}>\n          <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n            <Label \n              for=\"email\"\n              className=\"mr-sm-2\">\n              Email:\n            </Label>\n            <Input\n              onChange={handleChange} \n              type=\"email\" \n              name=\"email\" \n              id=\"email\"/>\n          </FormGroup>\n          <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n            <Label \n              for=\"password\"\n              className=\"mr-sm-2\">\n              Password:\n            </Label>\n            <Input\n              onChange={handleChange} \n              type=\"password\"\n              name=\"password\" \n              id=\"password\"/>\n          </FormGroup>\n          <Button\n            color=\"primary\"\n            className=\"LoginPage__submit-btn\">\n            Login\n          </Button>\n        </Form>\n\n          {errFlag && (\n            <Alert\n            color=\"danger\"\n            className=\"LoginPage__error\">\n              Invalid email or password.\n            </Alert>\n          )}\n        </div>\n    </section>\n    )\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\n/** Styles **/\nimport './WelcomePage.css';\n/** Views **/\nimport LoginPage from '../LoginPage/LoginPage';\nimport SignUpPage from '../SignUpPage/SignUpPage';\n/** Redux **/\nimport { useSelector } from 'react-redux';\n\nconst WelcomePage = () => {\n  /** Redux **/\n  const isLogged = useSelector(state => state.isLogged);\n  const user = useSelector(state => state.user);\n\n  if (isLogged) {\n    return (\n      <div className=\"WelcomePage\">\n        <h1\n          className=\"WelcomePage__site-banner\">\n            {`Welcome to Habitbook, ${user.username}!`}\n        </h1>\n\n        {/* stretch: link to dashboard etc */}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1\n        className=\"WelcomePage__site-banner\">\n          Welcome to Habitbook!\n      </h1>\n\n      <section \n        className=\"WelcomePage__form-section\">\n        <div>\n          <h4>\n            Welcome back! Please sign in.\n          </h4>\n          <LoginPage />\n        </div>\n        <div>\n          <h4>\n            New user? Register here!\n          </h4>\n          <SignUpPage />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default WelcomePage;\n","import React, { useState } from 'react';\n/** Redux **/\nimport { useDispatch } from 'react-redux';\n/** Redux - actions **/\nimport { increment } from '../../../actions';\n/** Reactstrap **/\nimport { Button, Form, FormGroup, Label, Input, FormText, Alert, Spinner } from 'reactstrap';\n/** Helpers **/\nimport useForm from '../../../hooks/useFormHook';\nimport { submitHabit_API } from '../../../helpers/postDataHelpers';\nimport { validateForm } from '../../../helpers/habitFormHelpers';\n/** Styles **/\nimport './NewHabitForm.css';\n\n\nconst NewHabitForm = props => {\n  /** State **/\n  const [\n    values,\n    handleChange,\n    handleSubmit,\n    handleReset\n  ] = useForm(submitHabit);\n  const [formFeedback, setFormFeedback] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  /** Redux **/\n  const dispatch = useDispatch();\n\n  function submitHabit() {\n    // ensure no empty title, and trim text for whitespace\n    const validated = validateForm(values);\n    if (validated.err) return setError(validated.err);\n\n    // if validation passes, send post request\n    setLoading(true);\n    submitHabit_API(validated.habit, res => {\n      console.log(res.data.msg);\n      // reset form, set form feedback, and clear spinner\n      handleReset();\n      setFormFeedback(res.data.msg);\n      setLoading(false);\n      setError('');\n  \n      // trigger fetch data after crud operation\n      dispatch(increment(1));\n  \n      // remove form feedback after 2 seconds\n      setTimeout(() => {\n        setFormFeedback('');\n      }, 2000);\n    });\n  }\n\n  return (\n    <div className=\"NewHabitForm__container\">\n      <h4>Create a new habit!</h4>\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label for=\"title\">\n            Title:\n          </Label>\n          <Input\n            value={values.title || ''}\n            onChange={handleChange}\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"description\">\n            Description:\n          </Label>\n          <Input\n            value={values.description || ''}\n            onChange={handleChange}\n            id=\"textarea\"\n            name=\"description\"\n            type=\"textarea\" />\n        </FormGroup>\n\n        <Button\n          disabled={loading}\n          type=\"submit\">\n            {loading ? <Spinner size=\"sm\"/> : 'Submit'}\n        </Button>\n      </Form>\n\n      {formFeedback && \n        (<Alert\n          className=\"NewHabitForm__form-feedback\"\n          color=\"success\">\n            {formFeedback}\n      </Alert>)}\n      {error &&\n        (<Alert\n          className=\"NewHabitForm__error\"\n          color=\"danger\">\n            {error}\n        </Alert>)\n      }\n    </div>\n  );\n};\n\nexport default NewHabitForm;\n","import React from 'react'\n/** Subcomponents **/\nimport NewHabitForm from './NewHabitForm/NewHabitForm'\n/** Styles **/\nimport './NewHabit.css';\n\n\nconst NewHabit = () => {\n\n  return (\n    <section className=\"NewHabit__section\">\n      <NewHabitForm />\n    </section>\n  )\n}\n\nexport default NewHabit\n","import { formatZeros } from './formatHelpers';\n\n/** Helper functions that deal with instances of new Date() **/\n\n/** Input: date object. Output: string in YYYY-MM-DD format **/\nexport const getDateYYYYMMDD = dateObj => {\n  const year = formatZeros(dateObj.getFullYear(), 2);\n  const month = formatZeros(dateObj.getMonth() + 1, 2); // Months: 0-11\n  const date = formatZeros(dateObj.getDate(), 2);\n  return `${year}-${month}-${date}`;\n};\n\n// return the time since a date\nexport const getTimeSince = dateStr => {\n  const dateArr = dateStr.split('T');\n  const date = dateArr[0];\n  const time = dateArr[1];\n\n  const today = new Date(); \n}\n\n// borrowed function form stackoverflow\nexport function timeSince(date) {\n\n  var seconds = Math.floor((new Date() - date) / 1000);\n\n  var interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}","import axios from \"axios\";\n/** Auth **/\nimport { config, headers } from \"../util/config\";\n\n// Input: Date YYYY-MM-DD. Ask server to insert new created_at into db\nexport const createCompletedAt = async (date, user_id, habit_id, callback) => {\n  const endpoint = process.env.REACT_APP_API + `completed_at`;\n\n  const payload = {\n    date,\n    user_id,\n    habit_id,\n  };\n\n  try {\n    const request = await axios.post(endpoint, payload, config);\n    const newEntry = request.data;\n    callback(newEntry);\n  } catch (err) {\n    console.log(err.message);\n    callback(null, err);\n  }\n};\n\n// Delete (untoggle) completed at\nexport const deleteCompletedAt = (habit_id, date, callback) => {\n  const endpoint =\n    process.env.REACT_APP_API + `completed_at/${habit_id}/${date}`;\n\n  axios\n    .delete(endpoint, { headers })\n    .then((res) => {\n      callback(res);\n    })\n    .catch((err) => console.log(err));\n};\n\n// Given array of dates, calculate longest streak\nexport const calcLongestStreak = (datesArr) => {\n  console.log(\"Calculating longest streak...\", datesArr);\n  if (datesArr.length === 0) return 0;\n  if (datesArr.length === 1) return 1;\n  let currentCounter = 1;\n  let longest = 0;\n\n  for (let i = 1; i < datesArr.length; i++) {\n    const [prevYear, prevMonth, prevDay] = datesArr[i - 1].split(\"-\");\n    const [year, month, day] = datesArr[i].split(\"-\");\n\n    if (parseInt(day) - 1 === parseInt(prevDay)) {\n      console.log(\"consecutive!\");\n      currentCounter++;\n    } else {\n      if (currentCounter > longest) longest = currentCounter;\n      currentCounter = 1;\n    }\n  }\n\n  if (currentCounter > longest) longest = currentCounter;\n  return longest;\n\n  // TODO #3 - fix this function depending on month/leap year etc\n};\n\n// Input: int. Output: int.\n/* param notes: month is NOT 0 index value of month\n * i.e. January => 1, Feb => 2\n * Also, require year to determine leap year */\nfunction daysInMonth(MM, YYYY) {\n  const month = parseInt(MM);\n  const year = parseInt(YYYY);\n  const monthsWith31d = [1, 3, 5, 7, 8, 10, 12];\n  const monthsWith30d = [4, 6, 9, 11];\n  const monthsWith28d = [2];\n\n  if (monthsWith28d.includes(month)) {\n    return isLeapYear(year) ? 29 : 28;\n  } else if (monthsWith31d.includes(month)) {\n    return 31;\n  } else if (monthsWith30d.includes(month)) {\n    return 30;\n  }\n}\n\n// if leapyear, Feb has 29 days\nfunction isLeapYear(YYYY) {\n  const year = parseInt(YYYY);\n  if (year % 4 !== 0) return false;\n  if (year % 100 === 0) {\n    if (year % 400 === 0) return true;\n    else return false;\n  }\n  // if all validation pass, it is leap year\n  return true;\n}\n","import React, { useState, useEffect } from \"react\";\n/** Subcomponents **/\nimport Calendar from \"react-calendar\";\n/** Styles **/\nimport \"./CalendarComponent.css\";\n/** Helpers **/\nimport { getDateYYYYMMDD } from \"../../../helpers/dateObjHelpers\";\nimport {\n  createCompletedAt,\n  deleteCompletedAt,\n  calcLongestStreak,\n} from \"../../../helpers/CalendarHelpers\";\n/** Redux **/\nimport { useDispatch, useSelector } from \"react-redux\";\n/** Redux-actions **/\nimport { increment } from \"../../../actions\";\n/** React strap **/\nimport { Spinner } from \"reactstrap\";\n\n/** Calendar classnames constants **/\nconst CALENDAR_SELECTED = \"CalendarComponent__selected\";\nconst CALENDAR_TODAY = \"CalendarComponent__today\";\n\n/** Constants **/\nconst ERR_TIMEOUT_FADE = 2000; // time in ms\n\n/* Props notes:\n/* completedAt is an array of dates in the same format as what is \n/*  returned from getDateYYYYMMDD function */\nconst CalendarComponent = (props) => {\n  const { completedAt, user_id, habit_id, setErr, setSuccess } = props;\n\n  /** State **/\n  const [value, setValue] = useState(new Date());\n  const [isLoading, setIsLoading] = useState(false);\n  const [longestStreak, setLongestStreak] = useState(0);\n\n  /** Redux **/\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n\n  // calculate longest streak\n  useEffect(() => {\n    setLongestStreak(calcLongestStreak(completedAt));\n  }, [completedAt]);\n\n  // when user clicks a tile on the calendar...\n  const handleClickDay = async (value, e) => {\n    // setValue(value);\n    if (isLoading) return;\n    const date = getDateYYYYMMDD(value);\n\n    // check if habit belongs to user\n    if (user.user_id !== props.user_id) {\n      setErr(\"This habit does not belong to you.\");\n      return console.log(\"This habit does not belong to you.\");\n    }\n\n    // check if day is not in completedAt[]\n    // if day is already marked, unmark it\n    const isSelected = e.target.className.includes(CALENDAR_SELECTED);\n    if (isSelected) {\n      setIsLoading(true);\n      deleteCompletedAt(habit_id, date, (res) => {\n        setIsLoading(false);\n        // trigger view update\n        dispatch(increment(1));\n      });\n      return console.log(\"Already marked blue.\");\n    }\n\n    // check if day is not in future\n    if (getDateYYYYMMDD(value) > getDateYYYYMMDD(new Date())) {\n      // clear present feedback and set new feedback\n      setErr(\"\");\n      setSuccess(\"\");\n      setErr(\"Cannot set future date.\");\n      setTimeout(() => {\n        setErr(\"\");\n      }, ERR_TIMEOUT_FADE);\n      return;\n    }\n\n    // request to create completed_at\n    // TODO: change this to .ISOSstring\n    console.log(\"Requesting new completed_at...\");\n\n    setIsLoading(true);\n    createCompletedAt(date, user_id, habit_id, (success, err) => {\n      if (err) return setIsLoading(false);\n\n      // trigger view update\n      dispatch(increment(1));\n\n      // clear present feedback and set new feedback\n      // setErr('');\n      // setSuccess('');\n      setSuccess(\"Day marked complete!\");\n      setIsLoading(false);\n      setTimeout(() => {\n        setSuccess(\"\");\n      }, ERR_TIMEOUT_FADE);\n    });\n  };\n\n  // this sets the color on completed days\n  const highlightRange = ({ date, view }) => {\n    if (view === \"month\") {\n      const _date = getDateYYYYMMDD(date);\n      const today = getDateYYYYMMDD(new Date());\n\n      // highlight today when it is also selected\n      if (_date === today && completedAt.includes(_date)) {\n        return `${CALENDAR_TODAY} ${CALENDAR_SELECTED}`;\n      }\n      // highlight completed days in the past\n      if (completedAt.includes(_date)) return CALENDAR_SELECTED;\n      // highlight today\n      if (_date === today) return CALENDAR_TODAY;\n    }\n  };\n\n  // if habit card doesn't belong to use, disable mouse events\n  let unclickable;\n  if (user.user_id !== props.user_id) {\n    unclickable = \"unclickable\";\n  }\n\n  return (\n    <section\n      className={`CalendarComponent ${unclickable} ${\n        isLoading && \"unclickable\"\n      }`}\n    >\n      <div className=\"CalendarComponent__calendar-container\">\n        <Calendar\n          value={value}\n          onClickDay={handleClickDay}\n          tileClassName={highlightRange}\n        />\n      </div>\n\n      {isLoading && <Spinner className=\"CalendarComponent__spinner\" />}\n\n      <span className=\"CalendarComponent__streak-span\">\n        Longest streak: {longestStreak}\n      </span>\n    </section>\n  );\n};\n\nexport default CalendarComponent;\n","import axios from 'axios';\n/** Redux - actions **/\nimport { increment } from '../actions';\n/** Auth **/\nimport { config, headers } from '../util/config';\n\n// given user_id, get all habits\nexport const getUserHabits = (user_id, callback) => {\n  const endpoint =\n    process.env.REACT_APP_API + `habits/${user_id}`;\n\n  axios\n    .get(endpoint)\n    .then(res => callback(res.data))\n    .catch(err => console.log(err));\n};\n\n// delete habit\nexport const handleDeleteCard = async (e, user_id, habit_id, dispatch) => {\n  e.preventDefault();\n\n  const endpoint =\n    process.env.REACT_APP_API + \n    `habits/delete/${user_id}/${habit_id}`\n  \n  axios\n    .delete(endpoint, {headers})\n    .then(res => {\n      // trigger fetch data after crud operation\n      dispatch(increment(1));\n    })\n    .catch(err => console.log(err));\n};\n\n// get number of likes for each habit\nexport const getLikes = async (user_id, habit_id, callback) => {\n  try {    \n    const endpoint = process.env.REACT_APP_API +\n      `habits/likes/${user_id}/${habit_id}`;\n    const likes = await axios.get(endpoint);\n    callback(likes.data);\n\n  } catch (err) {\n    console.log(err);\n  };\n};\n\n// register new like to DB (or delete if existing)\nexport const registerLike = (user, user_id, habit_id, callback) => {\n  const endpoint = process.env.REACT_APP_API +\n    `habits/likes`;\n\n  const payload = {\n    liked_by: user.user_id,\n    habit_by: user_id,\n    habit_id\n  };\n  \n  axios\n    .post(endpoint, payload, config)\n    .then(res => {\n      callback(res.data);\n    })\n    .catch(err => {\n      console.log(err);\n      callback(null, err);\n    });\n};\n\n// get all comments on a habit\nexport const getComments = (habit_id, callback) => {\n  const endpoint = process.env.REACT_APP_API +\n    `comments/${habit_id}`;\n  \n  axios\n    .get(endpoint)\n    .then(res => {\n      callback(res.data);\n    })\n    .catch(err => console.log(err));\n};","import React from 'react'\n/** Reactstrap **/\nimport { Button } from 'reactstrap';\n/** Styles **/\nimport './CommentDeleteConfimration.css';\n\nconst CommentDeleteConfimration = props => {\n  const { setIsDeleteMode, handleDeleteComment } = props;\n\n\n  const handleDelete = e => {\n    e.preventDefault();\n    handleDeleteComment();\n  };\n  \n  const handleCancel = e => {\n    e.preventDefault();\n    // close prompt\n    setIsDeleteMode(false);\n  };\n  \n  return (\n    <div className=\"CommentDeleteConfirmation\">\n      <h3 className=\"CommentDeleteConfirmation__prompt\">\n        Delete comment?\n      </h3>\n\n      <div className=\"CommentDeleteConfirmation__button-container\">\n        <Button\n          onClick={handleDelete}\n          color=\"danger\">\n            Delete\n        </Button>\n        <Button\n          onClick={handleCancel}\n          color=\"light\">\n            Cancel\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default CommentDeleteConfimration\n","import React, { useState } from 'react'\n/** Helpers */\nimport { updateComment } from '../../../../helpers/commentDataHelpers';\n/** Styles **/\nimport './CommentEditForm.css';\n\nconst CommentEditForm = ({ comment, setIsEditMode, setTempComment, setTempEdited }) => {\n  /** State **/\n  const [value, setValue] = useState(comment.content);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateComment(value, comment.comment_id, (content, err) => {\n      if (err) return;\n\n      // temp view update for current user to prevent another db query just to update their state.\n      setTempComment(content);\n      setTempEdited(true);\n      // close edit component\n      setIsEditMode(false);\n    });\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"CommentEditForm\">\n        <input\n          autoFocus\n          onChange={handleChange}\n          value={value}\n          className=\"CommentEditForm__input\"/>\n    </form>\n  )\n}\n\nexport default CommentEditForm\n","/** All the functions in this file are for comments CRUD requests **/\n\nimport axios from 'axios';\nimport { config, headers } from '../util/config';\n\n// CREATE\nexport const createComment = (habit_id, content, is_edited, callback) => {\n  const endpoint = process.env.REACT_APP_API + \n      `comments/newComment`;\n\n    const payload = {\n      habit_id,\n      content,\n      is_edited\n    };\n    \n    axios\n      .post(endpoint, payload, config)\n      .then(res => {\n        callback();\n      })\n      .catch(err => console.log(err));\n}\n\nexport const deleteComment = (comment_id, callback) => {\n  const endpoint = process.env.REACT_APP_API + \n    `comments/delete/${comment_id}`;\n\n  axios\n    .delete(endpoint, {headers})\n    .then(res => {\n      // trigger fetch data after crud operation\n      callback(res);\n    })\n    .catch(err => console.log(err));\n};\n\n// READ\n\n// UPDATE\nexport const updateComment = (content, comment_id, callback) => {\n  const endpoint = process.env.REACT_APP_API + \n    `comments/updateComment`;\n\n  const payload = {\n    content,\n    comment_id\n  }\n\n  axios\n    .put(endpoint, payload, config)\n    .then(res => {\n      callback(res.data.content);\n    })\n    .catch(err => {\n      console.error(err.message)\n      callback(null, err.message);\n    })\n};\n\n// DELETE","import React, { useEffect, useState } from 'react';\n/** React router **/\nimport { Link } from 'react-router-dom';\n/** Redux **/\nimport { useDispatch, useSelector } from 'react-redux';\n/** Redux actions **/\nimport { increment } from '../../../../actions';\n/** React strap **/\nimport { Button } from 'reactstrap';\n/** Helpers **/\nimport { getUserAPIData } from '../../../../helpers/getDataHelpers';\nimport { getTimeSince, timeSince } from '../../../../helpers/dateObjHelpers';\nimport { getComments, handleDeleteCard } from '../../../../helpers/habitDataHelpers';\nimport { deleteComment } from '../../../../helpers/commentDataHelpers';\n/** Styles **/\nimport './CommentCard.css';\n/** Subcomponents **/\nimport CommentDeleteConfimration from '../CommentDeleteConfirmation/CommentDeleteConfimration';\nimport CommentEditForm from '../CommentEditForm/CommentEditForm';\n\nconst CommentCard = ({ comment, setComments }) => {\n  const { comment_id,\n          comment_by,\n          habit_id,\n          created_at,\n          content,\n          is_edited } = comment;\n\n  /** State **/\n  const [commenter, setCommenter] = useState({});\n  const [isMyComment, setIsMyComment] = useState(false);\n  const [isDeleteMode, setIsDeleteMode] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  /** View change notes: these variables are to update the view temporarily for the user, to prevent another DB query just to update their view. These are set once we get OK from DB that data has been updated **/\n  const [tempComment, setTempComment] = useState(content);\n  const [tempEdited, setTempEdited] = useState(is_edited);\n\n  /** Redux **/\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  // get commenter's info (avatar, name etc)\n  useEffect(() => {\n    getUserAPIData(comment_by, (data) => {\n      setCommenter(data);\n    });\n\n    // if this comment is user's show option to delete button\n    if (comment_by === user.user_id) {\n      setIsMyComment(true);\n    }\n  }, []);\n\n  // TODO: refactor - use this function to trigger view reload on other components?\n  const triggerReload = () => {\n    dispatch(increment(1));\n    // window.location.reload();\n  };\n\n  const handleDeleteComment = () => {\n    deleteComment(comment_id, res => {\n      getComments(habit_id, data => {\n        setComments(data);\n      })\n    });\n  };\n\n  const toggleConfirmDelete = e => {\n    e.preventDefault();\n    setIsDeleteMode(true);\n  }\n\n  const toggleEditMode = e => {\n    e.preventDefault();\n    setIsEditMode(!isEditMode);\n  }\n\n  return (\n    <div className=\"CommentCard\">\n      <div className=\"CommentCard__avatar-container\">\n        <img\n          className=\"CommentCard__avatar\" \n          src={commenter.avatar_url}/>\n\n        <span className=\"CommentCard__username\">\n          @{commenter.username}\n        </span>\n      </div>\n\n      <div className=\"vertical-split\">\n        <div className=\"CommentCard__content-container\">\n          <span className=\"CommentCard__full-name\">\n            <Link\n              onClick={triggerReload}\n              to={`/users/${comment_by}`}>\n                {`${commenter.first_name} ${commenter.last_name}`}\n            </Link>\n          </span>\n\n          <div className=\"CommentCard__content\">\n            {tempComment}\n            {isEditMode && (\n              <CommentEditForm\n                setTempEdited={setTempEdited}\n                setTempComment={setTempComment}\n                setIsEditMode={setIsEditMode}\n                comment={comment}/>\n            )}\n          </div>\n        </div>\n\n        <div className=\"CommentCard__buttons-container\">\n          {tempEdited && (\n            <span className=\"CommentCard__edited\">\n              (edited)\n            </span>\n          )}  \n\n          <span className=\"CommentCard__created-at\">\n            {timeSince(new Date(created_at))} ago\n          </span>\n          \n          {/* delete comment button  */}\n          {isMyComment && !isDeleteMode && (\n            <Button\n              onClick={toggleConfirmDelete}\n              color=\"danger\"\n              className=\"CommentCard__delete-comment\">\n                delete\n            </Button>)}\n\n          {/* edit comment button */}\n          {isMyComment && (\n            <Button\n              onClick={toggleEditMode}\n              className=\"CommentCard__edit-comment\"\n              color={isEditMode ? 'light' : 'primary'}>\n                {isEditMode ? 'cancel' : 'edit'}\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {isDeleteMode && (\n        <CommentDeleteConfimration\n          handleDeleteComment={handleDeleteComment}\n          setIsDeleteMode={setIsDeleteMode}/>\n      )}\n    </div>\n  );\n};\n\nexport default CommentCard;\n","import React from 'react';\n/** Subcomponents **/\nimport CommentCard from './CommentCard/CommentCard';\n/** Styles **/\nimport './CommentsContainer.css';\n/** npm **/\nimport { v4 as uuidv4 } from 'uuid';\n\n// Props notes: \n// comments is an array of objects containing comment info\nconst CommentsContainer = props => {\n  const { comments, setComments } = props;\n\n  // spread for render\n  const _comments = comments.map(comment => {\n    return <CommentCard key={uuidv4()} comment={comment} setComments={setComments}/>\n  });\n  return (\n    <div className=\"CommentsContainer\">\n      <hr />\n      {comments.length === 0 && 'There are no comments on this post. Be the first to comment!'}\n\n      {_comments}\n    </div>\n  );\n};\n\nexport default CommentsContainer;","import React from 'react';\n/** Custom Hooks **/\nimport useForm from '../../../hooks/useFormHook';\n/** Redux **/\nimport { useSelector } from 'react-redux';\n/** Styles **/\nimport './CommentForm.css';\n/** Helpers **/\nimport { createComment } from '../../../helpers/commentDataHelpers';\n\nconst CommentForm = props => {\n  /** State **/\n  const [ values,\n          handleChange,\n          handleSubmit,\n          handleReset ] = useForm(submitComment);\n\n  /** Redux **/\n  const user = useSelector(state => state.user);\n\n  function submitComment() {\n    createComment(\n      props.habit_id,\n      values.content,\n      false, // is_edited = false\n      () => {\n        // reset form\n        handleReset();\n        //trigger view change\n        /* 2nd param true is to keep comment container open - find original function in habit card */\n        props.handleExpandComments(null, true);\n      });\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"CommentForm__container\">\n        <img\n          className=\"CommentForm__avatar\"\n          src={user.avatar_url} />\n        <input\n          ref={props.commentField}\n          autoComplete=\"off\"\n          name=\"content\"\n          value={values.content || ''}\n          onChange={handleChange}\n          className=\"CommentForm__comment-input\"\n          placeholder=\"Leave a comment...\"/>\n    </form>\n  );\n};\n\nexport default CommentForm;\n","import React from 'react'\n/** Custom hooks **/\nimport useInput from '../../../hooks/useInput';\n/** Helpers **/\nimport { handleDeleteCard } from '../../../helpers/habitDataHelpers';\n/** Reactstrap **/\nimport { Button } from 'reactstrap';\n/** Styles **/\nimport './DeleteConfirmation.css';\n\nconst DeleteConfirmation = props => {\n  const { user_id,\n          habit_id,\n          dispatch,\n          closeModal,\n          title } = props;\n\n  /** State **/\n  const [value, bind, reset] = useInput('');\n\n\n  return (\n    <div className=\"DeleteConfirmation\">\n      <Button close\n        onClick={closeModal}/>\n        \n      <span className=\"DeleteConfirmation__prompt\">\n        Are you sure you want to delete?\n        <i className=\"DeleteConfirmation__prompt\">\n          Once a habit is deleted, all data is lost and cannot be recovered.\n        </i>\n      </span>\n\n      <hr />\n\n      <span className=\"DeleteConfirmation__prompt\">\n        Please type \"\n        <i className=\"DeleteConfirmation__keyword\">   {title}\n        </i>\" to delete.\n      </span>\n\n      <div className=\"flush-height\">\n        <input\n          className=\"DeleteConfirmation__input\"\n          value={value}\n          onChange={bind.onChange}/>\n\n        {<Button\n          className=\"DeleteConfirmation__button\"\n          color=\"danger\"\n          onClick={e => handleDeleteCard(e, user_id, habit_id, dispatch)}\n          disabled={title !== value}>\n            DELETE\n        </Button>}\n      </div>\n    </div>\n  )\n}\n\nexport default DeleteConfirmation\n","import React, { useEffect, useState, useRef } from \"react\";\n/** npm **/\nimport classNames from \"classnames\";\n/** Subcomponents **/\nimport CalendarComponent from \"./CalendarComponent/CalendarComponent\";\nimport CommentsContainer from \"./CommentsContainer/CommentsContainer\";\nimport CommentForm from \"./CommentForm/CommentForm\";\nimport DeleteConfirmation from \"./DeleteConfirmation/DeleteConfirmation\";\nimport EditHabitForm from \"./EditHabitForm/EditHabitForm\";\n/** Reactstrap **/\nimport {\n  Tooltip,\n  Alert,\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n/** Styles **/\nimport \"./HabitCard.css\";\n/** Helpers **/\nimport { formatToWords, formatPlural } from \"../../helpers/formatHelpers\";\nimport {\n  getCompleted_atAPIData,\n  getUserAPIData,\n} from \"../../helpers/getDataHelpers\";\nimport {\n  handleDeleteCard,\n  getLikes,\n  registerLike,\n  getComments,\n} from \"../../helpers/habitDataHelpers\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\n/** Redux-actions **/\nimport { increment } from \"../../actions\";\n\nconst HabitCard = ({ habit }) => {\n  /** Props **/\n  const {\n    habit_id,\n    title,\n    description,\n    created_at,\n    last_completed_at,\n    last_broken_at,\n    is_edited,\n    user_id,\n  } = habit;\n\n  /** State **/\n  const [completedAt, setCompletedAt] = useState([]);\n  const [isMyHabit, setIsMyHabit] = useState(false);\n  const [isMyLike, setIsMyLike] = useState(false);\n  const [likes, setLikes] = useState([]);\n  const [likesCount, setLikesCount] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const [habit_by, setHabitBy] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  // use null here for conditional rendering, instead of using empty array?\n  const [comments, setComments] = useState([]);\n  const [deleteConfirm, setDeleteConfirm] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [commentsExpanded, setCommentsExpanded] = useState(false);\n\n  /** useRef **/\n  const commentField = useRef();\n\n  /** Redux **/\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter);\n  const user = useSelector((state) => state.user);\n\n  /** Classnames **/\n  const liked = classNames({\n    liked: isMyLike,\n  });\n\n  // on mount, get comment number\n  useEffect(() => {\n    getComments(habit_id, (comments) => {\n      setComments(comments);\n    });\n  }, []);\n\n  // When each habit loads, get a list of completed days\n  useEffect(() => {\n    getCompleted_atAPIData(user_id, habit_id, (data) => {\n      console.log(data);\n      setCompletedAt(data);\n    });\n  }, [counter]);\n\n  // If this habit belongs to this user, display delete btn\n  const _user_id = useSelector((state) => state.user.user_id);\n  useEffect(() => {\n    if (habit.user_id === _user_id) {\n      setIsMyHabit(true);\n    }\n\n    // get number of likes\n    getLikes(user_id, habit_id, (likes) => {\n      setLikesCount(likes.length);\n      setLikes(likes);\n\n      // check if this user liked this habit\n      for (let like of likes) {\n        if (like.liked_by === user.user_id) {\n          setIsMyLike(true);\n          return;\n        }\n      }\n\n      setIsMyLike(false);\n    });\n\n    /* STRETCH: fetch number of comments like fb */\n    // // get comments\n    // getComments(habit_id, setComments);\n  }, [counter]);\n\n  // get name of user who created habit\n  useEffect(() => {\n    getUserAPIData(user_id, (data) => {\n      setHabitBy(data.username);\n    });\n  }, []);\n\n  const handleLikeBtn = (e) => {\n    e.preventDefault();\n\n    registerLike(user, user_id, habit_id, (success, err) => {\n      if (err) return;\n      switch (success.action) {\n        case \"LIKED\":\n          setLikesCount((count) => count + 1);\n          break;\n        case \"UNLIKED\":\n          setLikesCount((count) => count - 1);\n          break;\n      }\n      setIsMyLike(!isMyLike);\n    });\n  };\n\n  const confirmDelete = (e) => {\n    e.preventDefault();\n    setDeleteConfirm(true);\n  };\n\n  /* 2nd param keepOpen is passed in after a submission in the CommentForm.js component - keeps comment section open after new submission */\n  const handleExpandComments = (e, keepOpen) => {\n    e && e.preventDefault();\n    if (!keepOpen && commentsExpanded) {\n      // close comments\n      return setCommentsExpanded(false);\n    }\n\n    // get comments\n    getComments(habit_id, (comments) => {\n      setComments(comments);\n      // expand comments\n      setCommentsExpanded(true);\n    });\n  };\n\n  const handleEditToggle = (e) => {\n    e.preventDefault();\n    setEditMode(true);\n  };\n\n  const focusCommentField = (e) => {\n    e.preventDefault();\n    commentField.current.focus();\n  };\n\n  return (\n    <div className=\"HabitCard\">\n      <div className=\"HabitCard__container\">\n        <CalendarComponent\n          habit_id={habit_id}\n          user_id={user_id}\n          completedAt={completedAt}\n          setSuccess={setSuccess}\n          setErr={setErr}\n        />\n        <div className=\"HabitCard__data-container\">\n          <h4 className=\"HabitCard__title\">{title}</h4>\n          <span className=\"HabitCard__description\">\n            {editMode && (\n              <EditHabitForm\n                setSuccess={setSuccess}\n                setErr={setErr}\n                habit_id={habit_id}\n                setEditMode={setEditMode}\n                description={description}\n                title={title}\n              />\n            )}\n            {description ? description : <i>No description provided.</i>}\n          </span>\n          <h5 className=\"HabitCard__created-at\">\n            Created at {formatToWords(created_at)} by @{habit_by}\n          </h5>\n\n          {is_edited && (\n            <span className=\"HabitCard__edited-span\">(edited)</span>\n          )}\n\n          {/* error feedback */}\n          {err && (\n            <Alert color=\"danger\" className=\"HabitCard__err-msg\">\n              {err}\n            </Alert>\n          )}\n\n          {/* success feedback */}\n          {success && (\n            <Alert color=\"success\" className=\"HabitCard__success-msg\">\n              {success}\n            </Alert>\n          )}\n        </div>\n\n        <footer className=\"HabitCard__footer\">\n          {likesCount > 0 && (\n            <span className={`HabitCard__likes-span ${liked}`}>\n              {`${likesCount} ${formatPlural(likesCount, \"like\")}`}\n            </span>\n          )}\n          <button className={liked} onClick={handleLikeBtn}>\n            {isMyLike ? \"unlike\" : \"like\"}\n          </button>\n          {/* if comments expanded, show 'close comments', else show number of comments viewable */}\n          <button\n            className=\"HabitCard__view-comment-btn\"\n            onClick={\n              comments.length === 0 ? focusCommentField : handleExpandComments\n            }\n          >\n            {commentsExpanded\n              ? \"close comments\"\n              : comments.length === 0\n              ? \"comment\"\n              : `view ${comments.length} ${formatPlural(\n                  comments.length,\n                  \"comment\"\n                )}`}\n          </button>\n\n          <CommentForm\n            commentField={commentField}\n            handleExpandComments={handleExpandComments}\n            habit_id={habit_id}\n          />\n        </footer>\n\n        {isMyHabit && !editMode && (\n          <button onClick={confirmDelete} className=\"HabitCard__delete-btn\">\n            delete\n          </button>\n        )}\n\n        {isMyHabit && !editMode && (\n          <button onClick={handleEditToggle} className=\"HabitCard__edit-btn\">\n            edit\n          </button>\n        )}\n      </div>\n\n      {deleteConfirm && (\n        <DeleteConfirmation\n          closeModal={() => setDeleteConfirm(false)}\n          user_id={user_id}\n          habit_id={habit_id}\n          dispatch={dispatch}\n          title={title}\n        />\n      )}\n\n      {commentsExpanded && (\n        <CommentsContainer setComments={setComments} comments={comments} />\n      )}\n    </div>\n  );\n};\n\nexport default HabitCard;\n","import React, { useEffect, useState } from 'react';\n/** Subcomponents **/\nimport HabitCard from '../HabitCard/HabitCard';\n/** Redux **/\nimport { useSelector } from 'react-redux';\n/** Helpers **/\nimport { getUserHabits } from '../../helpers/habitDataHelpers';\n/** Styles **/\nimport './CardsContainer.css';\n\n\nconst CardsContainer = () => {\n  /** State **/\n  const [habits, setHabits] = useState([]);\n\n  /** Redux **/\n  const user_id = useSelector(state => state.user.user_id)\n  const counter = useSelector(state => state.counter);\n  \n  // on load, get all of the user's habits\n  useEffect(() => {\n    getUserHabits(user_id, data => {\n      setHabits(data);\n    });\n  }, [counter]);\n\n  // spread for rendering\n  const renderHabits = habits.map(habit => {\n    return <HabitCard key={habit.habit_id} habit={habit}/>;\n  });\n\n  return (\n    <div className=\"CardsContainer\">\n      {renderHabits}\n\n      <button onClick={e => {\n        e.preventDefault();\n        console.log(habits)\n      }}>\n        click\n      </button>\n    </div>\n  );\n};\n\nexport default CardsContainer;\n","import React, { useEffect } from \"react\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\n/** Helpers **/\nimport { getUserData } from \"../../helpers/protectedRouteOnMount\";\n/** React router **/\nimport { Redirect } from \"react-router-dom\";\n/** Subcomponents */\nimport NewHabit from \"../../components/NewHabit/NewHabit\";\nimport CardsContainer from \"../../components/CardsContainer/CardsContainer\";\nimport HabitCard from \"../../components/HabitCard/HabitCard\";\nimport { UserCard } from \"../../components/\";\n/** Styles **/\nimport \"./HomePage.css\";\n\nconst HomePage = () => {\n  /** Redux **/\n  const isLogged = useSelector((state) => state.isLogged);\n  const dispatch = useDispatch();\n  const refreshCount = useSelector((state) => state.counter);\n  const user = useSelector((state) => state.user);\n  const { first_name, last_name, username, email, user_id } = user;\n\n  /** On mount **/\n  // sync local storage user info with redux\n  useEffect(() => {\n    getUserData(dispatch);\n  }, []);\n\n  if (!isLogged) return <Redirect to=\"/\" />;\n  return (\n    <div className=\"HomePage\">\n      <h2 className=\"HomePage__welcome-prompt\">\n        Welcome to your dashboard, {`${username}`}!\n      </h2>\n\n      <div className=\"HomePage__secondary-dashboard\">\n        {user && <UserCard userObj={user} />}\n        <NewHabit />\n      </div>\n\n      {user_id && <CardsContainer />}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\n/** Subcomponents **/\nimport { UserSearchBar, UserCard } from '../../components/';\n/** Styles **/\nimport './SearchPage.css';\n/** Reactstrap **/\nimport { Spinner, Button } from 'reactstrap';\n\nconst SearchPage = () => {\n  const [queryHits, setQueryHits] = useState([]);\n  const [randomUsers, setRandomUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // on render, load a list of random users\n  useEffect(() => {\n    setIsLoading(true);\n    getRandomUsers(users => {\n      setIsLoading(false);\n      setRandomUsers(users);\n    });\n  }, []);\n\n  const getRandomUsers = async callback => {\n    const endpoint = process.env.REACT_APP_API +\n      `search/explore`;\n    \n    axios\n      .get(endpoint)\n      .then(res => {\n        callback(res.data);\n      })\n      .catch(err => console.log(err));\n  };\n\n  const handleRefresh = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    getRandomUsers(users => {\n      setIsLoading(false);\n      setRandomUsers(users);\n    });\n  };\n\n  // map for rendering\n  const _queryHits = queryHits.map(userObj => {\n    return (\n      <UserCard\n        key={userObj.user_id}\n        userObj={userObj}/>\n    )\n  });\n\n  const _randomUsers = randomUsers.map(userObj => {\n    return (\n      <UserCard\n        key={userObj.user_id}\n        userObj={userObj}/>\n    )\n  });\n\n  return (\n    <section className=\"SearchPage\">\n      <h3>Search for other users to follow</h3>\n      <div className=\"SearchPage__top-div\">\n        <UserSearchBar\n          setIsLoading={setIsLoading}\n          setQueryHits={setQueryHits}/>\n\n        <Button\n          color=\"warning\"\n          onClick={handleRefresh}\n          className=\"SearchPage__refresh-button\">\n            refresh\n        </Button>\n      </div>\n\n      {isLoading && <Spinner \n        className=\"SearchPage__spinner\"/>}\n\n          {_queryHits}\n          {_queryHits.length === 0 && _randomUsers}\n\n    </section>\n  )\n}\n\nexport default SearchPage\n","import React, { useEffect, useState } from 'react'\n/** Helpers **/\nimport { getHabitsAPIData, getUserAPIData } from '../../helpers/getDataHelpers';\nimport { getUserFollowers, getUserFollowing } from '../../helpers/followDataHelpers';\n/** npm **/\nimport { v4 as uuidv4 } from 'uuid';\n/** Subcomponents **/\nimport { UserCard } from '../../components/';\n/** Styles **/\nimport './UserPage.css';\nimport HabitCard from '../../components/HabitCard/HabitCard';\n/** Redux **/\nimport { useSelector } from 'react-redux';\n/** Reactstrap **/\nimport { ButtonGroup, Button } from 'reactstrap';\n\n/** Constants **/\n/* these variables are for the 3 buttons\n * in the button group */\nconst HABITS = 'Habits';\nconst FOLLOWERS = 'Followers';\nconst FOLLOWING = 'Following';\n\n// This view is used to display another user's page (not current user)\nconst UserPage = () => {\n  /** State **/\n  const [userObj, setUserObj] = useState({});\n  const [userHabits, setUserHabits] = useState([]);\n  const [userFollowers, setUserFollowers] = useState([]);\n  const [userFollowing, setUserFollowing] = useState([]);\n  const [toggledData, setToggledData] = useState(HABITS);\n\n  /** Redux **/\n  const counter = useSelector(state => state.counter);\n\n  // get user_id from browser window\n  const user_id = window.location.href.split('users/')[1];\n\n  useEffect(() => {\n    console.log('On mount user_id', user_id);\n    getUserAPIData(user_id, data => {\n      // stretch: set error\n      setUserObj(data);\n    });\n    getHabitsAPIData(user_id, data => {\n      // stretch: set error\n      setUserHabits(data);\n    });\n  }, [counter]);\n\n  const handleSwitchTab = e => {\n    e.preventDefault();\n\n    // if current mode is selected again, do nothing\n    // stretch: add cooldown?\n    if (e.target.innerHTML === toggledData) return;\n\n\n    console.log(e.target.innerHTML);\n    switch (e.target.innerHTML) {\n      case HABITS:\n        setToggledData(HABITS);\n        getHabitsAPIData(user_id, data => {\n          // stretch: set error\n          setUserHabits(data);\n        });\n        break;\n      case FOLLOWERS:\n        setToggledData(FOLLOWERS);\n        getUserFollowers(user_id, data => {\n          console.log('followers:', data);\n          setUserFollowers(data);\n        });\n        break;\n      case FOLLOWING:\n        setToggledData(FOLLOWING);\n        getUserFollowing(user_id, data => {\n          console.log('following:', data)\n          setUserFollowing(data);\n        });\n        break;\n    }\n  }\n\n  // returns a mapped array for rendering based on the current toggled view (3 buttons)\n  const spreadToggledData = () => {\n    switch (toggledData) {\n      case HABITS:\n        return userHabits.map(habit => {\n          return <HabitCard key={uuidv4()} habit={habit} />\n        });\n      case FOLLOWERS:\n        return userFollowers.map(userObj => {\n          return <UserCard key={uuidv4()} userObj={userObj} />\n        });\n      case FOLLOWING:\n        return userFollowing.map(userObj => {\n          return <UserCard key={uuidv4()} userObj={userObj} />\n        });\n    }\n  }\n\n  // feedback for when user has no habits/followers/following\n  const displayEmptyFieldMsg = () => {\n    switch (toggledData) {\n      case HABITS:\n        return (\n          <div className=\"UserPage__no-habits\">This user has no habits yet.</div>\n        );\n      case FOLLOWERS:\n        return (\n          <div className=\"UserPage__no-habits\">This user has no followers yet.</div>\n        );\n      case FOLLOWING:\n        return (\n          <div className=\"UserPage__no-habits\">This user is not following anyone yet.</div>\n        );\n    }\n  }\n\n  // return jsx based on current toggled data\n  let spread = spreadToggledData();\n\n  // check if empty\n  if (spread.length === 0) {\n    spread = displayEmptyFieldMsg();\n  }\n\n  return (\n    <section className=\"UserPage\">\n      <UserCard userObj={userObj} />\n\n      <ButtonGroup className=\"UserPage__button-group\">\n        <Button\n          color={toggledData === HABITS ? 'primary' : 'secondary'}\n          onClick={handleSwitchTab}>\n            {HABITS}\n        </Button>\n        <Button\n          color={toggledData === FOLLOWERS ? 'primary' : 'secondary'}\n          onClick={handleSwitchTab}>\n            {FOLLOWERS}\n        </Button>\n        <Button\n          color={toggledData === FOLLOWING ? 'primary' : 'secondary'}\n          onClick={handleSwitchTab}>\n            {FOLLOWING}\n        </Button>\n      </ButtonGroup>\n\n      {spread}\n    </section>\n  )\n}\n\nexport default UserPage\n","import React, { useState, useEffect } from 'react';\n/** npm **/\nimport { v4 as uuidv4 } from 'uuid';\n/** Helpers **/\nimport { getUserFollowing, getUserFollowers } from '../../helpers/followDataHelpers';\nimport { getUserAPIData } from '../../helpers/getDataHelpers';\n/** Subcomponents **/\nimport { UserCard } from '../../components';\n/** Redux **/\nimport { useSelector } from 'react-redux';\n\n\nconst FollowingPage = () => {\n  /** State **/\n  const [users, setUsers] = useState([]);\n\n  /** Redux **/\n  const user = useSelector(state => state.user);\n\n  // get a list of users the user follows\n  useEffect(() => {\n    getUserFollowing(user.user_id, data => {\n      setUsers(data);\n    });\n  }, []);\n\n  // map for rendering\n  const _users = users.map(userObj => {\n    return (\n      <UserCard \n        key={uuidv4()}\n        userObj={userObj} />\n    );\n  });\n\n  return (\n    <div className=\"FollowingPage navbar-offset\">\n      <h3>\n        {users.length === 0 ? 'You are not following anyone.' : 'Here are the users you follow!'}\n      </h3>\n\n      {_users}\n    </div>\n  );\n};\n\nexport default FollowingPage;\n","import React, { useEffect, useState } from 'react'\n/** Redux **/\nimport { useSelector } from 'react-redux';\n/** Subcomponents **/\nimport { UserCard } from '../../components';\n/** Helpers **/\nimport { getUserFollowers } from '../../helpers/followDataHelpers';\nimport { getUserAPIData } from '../../helpers/getDataHelpers';\n/** Styles **/\nimport './FollowersPage.css';\n\nconst FollowersPage = () => {\n  /** State **/\n  const [users, setUsers] = useState([]);\n\n  /** Redux **/\n  const user = useSelector(state => state.user);\n\n  useEffect(() => {\n    getUserFollowers(user.user_id, (data, err) => {\n      if (err) return console.log(err);\n      setUsers(data);\n    });\n  }, []);\n\n  // map for rendering\n  const _users = users.map(userObj => {\n    return (\n      <UserCard\n        key={userObj.user_id}\n        userObj={userObj} />\n    )\n  });\n\n  return (\n    <section className=\"navbar-offset\">\n      <h3>\n        {users.length === 0 ? 'You do not have any followers yet.' : 'Here are your followers!'}\n      </h3>\n      {_users}\n    </section>\n  )\n}\n\nexport default FollowersPage\n","import React, { useEffect } from \"react\";\nimport TestComponent from \"./components/TestComponent\";\nimport { useDispatch } from \"react-redux\";\n\n/** Views **/\nimport {\n  SignUpPage,\n  HomePage,\n  WelcomePage,\n  LoginPage,\n  SearchPage,\n  UserPage,\n  FollowingPage,\n  FollowersPage,\n} from \"./views\";\n/** Components **/\nimport { Navbar, ProtectedRoute } from \"./components\";\n/** React router **/\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n/** Styles **/\nimport \"./App.css\";\n/** Helpers **/\nimport { getUserData } from \"./helpers/protectedRouteOnMount\";\n\nfunction App() {\n  /** To persist user data when user refreshes app **/\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"Fetching user data from local storage...\");\n    getUserData(dispatch);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n\n        <Route exact path=\"/\" component={WelcomePage} />\n        <Route exact path=\"/welcome\" component={WelcomePage} />\n        <Route exact path=\"/signup\" component={SignUpPage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n\n        <ProtectedRoute path=\"/home\">\n          <HomePage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/test\">\n          <TestComponent />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/search-users\">\n          <SearchPage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/users\">\n          <UserPage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/following\">\n          <FollowingPage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/my-followers\">\n          <FollowersPage />\n        </ProtectedRoute>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n/* React-router notes:\n * - We can use switch to stop at the first instance of a route\n * - we can use 'exact' attribute to render exact route\n * - Reference: https://www.youtube.com/watch?v=Law7wfdg_ls\n * - Use imported <Link to=\"/route\"><Link/> to to navigate around */\n\n/* General notes:\n * I'll be leaving notes throughout the code regarding things\n * that I've learned while building this project. Search for\n * 'notes' to browse through them. */\n\n/* For next project notes:\n * - Have a file that contains all endpoints in the\n * event I want to change endpoints\n * - Have a file with all CRUD functions on client\n * AND server side\n * - Have clearer error messages with more info about\n * where an error came from */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/** This is an example file for reference **/\n\nconst counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + action.payload;\n    case 'DECREMENT':\n      return state - action.payload;\n    default:\n      return state;\n  };\n};\n\nexport default counterReducer;","/** This is an example file for reference **/\n\nconst loggedReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return state = true;\n    case 'LOGOUT':\n      return state = false;\n    default:\n      return state;\n  };\n};\n\nexport default loggedReducer;","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n};\n\nexport default function (state = initialState, action) { \n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload. status,\n        id: action.pauload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  };\n};","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  };\n};\n\nexport default authReducer;","export const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const USER_LOADED = 'USER_LOADED';\nexport const USER_LOADING = 'USER_LOADING';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n// export const GET_ERRORS = 'GET_ERRORS';\n\n/* File structure notes:\n * This is a clean way to make sure there are no \n * miscpellings of the action keywords. */","const initialState = {\n  username: null,\n  first_name: null,\n  last_name: null,\n  email: null,\n  created_at: null,\n  avatar_url: null\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'CLEAR_USER':\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;","import counterReducer from './counterReducer';\nimport loggedReducer from './loggedReducer';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport userReducer from './userReducer';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n  counter : counterReducer,\n  isLogged : loggedReducer,\n  error: errorReducer,\n  auth: authReducer,\n  user: userReducer\n});\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/** Reactstrap **/\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/** Redux **/\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport allReducers from './reducers';\n\nconst store = createStore(\n  allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}