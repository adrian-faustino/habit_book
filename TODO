SERVER TODO:
[x] set up db

  Users:
[x] set up CRUD
  [x] set up user model
  [x] seed DB
    [x] CREATE user (insert into db)
      [x] validation
        [x] no same users
    [x] READ users (display all users from db)
    [x] UPDATE users (change user info)
      [x] validation
        [x] no same users
    [x] DELETE users from db
      [] validation? => require user to enter password to delete. see if matches

  Habits:
[] habit crud routes
  [x] create habit
  [x] read habit
  [] update habit (edit)
  [x] delete habit
  [x] habit validation before submission
  [x] validation:
    [x] no empty title
    [x] no empty desc
  [x] list all Habits /habits
  [x] list a user's own Habits /habits/:userID
  [x] post a new habit
  [] update habit
  [x] delete habit
    [] auth (make sure only logged in user can delete their OWN habits)
[] add a limit to requests (pagination? inf scroll etc)


  created_at:
  [] crud routes
  [] protect route

CLIENT TODO:
  Users:
[x] set up redux
[x] set up react router
[x] set up reactstrap
[x] set up new user registration form
  [x] set up valid/invalid messages based on error from backend?
  [x] check if it added new users to db
  [x] don't store password in cleartext
[x] login/logout feature
[x] update validation to make sure passwords dont contain special chars
[x] update validation to not allow white space
[x] make sure password is not in cleartext (hash, salt)
[x] make axios request to backend and handle error/insert dB

  Habits:
[x] habit cards to display user habits (component)
  [x] format created at to proper date
  [x] implement calendar like on github
  [] implement like and commment button
    [] display total likes 
    [] display comments
  [] implement "check" (completed today) button

      Habits - calendar
        [x] Highlight range of dates (to show successful days)
          [x] set up compelted_at table
          [x] seed compelted_at table for user 19
          [x] get list of completed days for user 19
          [x] write functions to extract data from that array
        [x] refresh displayed when new habit is added or when its deleted

  Calendar:
  [] on click -> post req to create an entry in created_at


Refactor tasks:
[x] set up res and status code on errors server side (CRUD files)
[x] userCrud.js handle all catch (in try catch)
[x] fix CRUD response
[x] fix response on successful CRUD (userCRUD.js)
[x] fix username and password regex (special chars, _, -, etc);
[] clean up React imports, comment (for consistency)
[] add auth for all read routes (like habits/:user_id)
[x] refresh page after all CRUD? (to show most updated version from DB)

Bugs:
[x] username/password shouldn't have white space


Notes:
[x] use error obj e.g. { error : { email: "Must be valid", password: "Does not match" } }
[x] forms - server side validation AND server side validation

Current task:
[x] validation to prevent create/update same username or email
[x] refactor: fix CRUD response
[x] client side: set up new user registration form
[x] user validation client side
[x] make axios request to backend and handle error/insert dB
[x] login/logout feature
[x]  usebcrypt to hash and salt passwords
  [x] new register page -> redirect to login page -> login page enter username and password -> check DB if there, return JWT token :)
[] habit crud routes
  [x] create habit
  [x] read habit
  [] update habit (edit)
  [x] delete habit
[x] habit cards to display user habits
  [x] learn about children props
[] auth (make sure only logged in user can delete their OWN habits) 
[x] refresh displayed when new habit is added or when its deleted


[] when user clicks current day, update DB 
  [] set compeleted_at
  [] set 